#!/usr/bin/env bash

tracefs="/sys/kernel/debug/tracing"

err() {
    echo "$@"
    exit 1
}

do_run() {
    if ! eval "$@"; then
        err "WARNING: command failed \"$*\""
    fi
}

post_hooks=()
atexit() {
    for ((i = ${#post_hooks[@]} - 1; i >= 0; i--)) {
        do_run "${post_hooks[i]}"
    }
}
trap atexit EXIT
run_atexit() {
    post_hooks+=("$*")
}

# do_event 'kmem:mm_page_alloc'
do_event() {
    local e="$1"
    local ename="${e//://}"
    do_run "echo 1 > $tracefs/events/$ename/enable"
    run_atexit "echo 0 > $tracefs/events/$ename/enable"
}

# do_kprobe 'p:myopen do_sys_open filename=+0(%si):string'
do_kprobe() {
    local k="$1"
    local tmp=${k#*:}
    local kname=${tmp%% *}
    do_run "echo '$k' >> '$tracefs/kprobe_events'"
    run_atexit "echo -:$kname >> $tracefs/kprobe_events"
    echo "$kname"
}

do_kprobe_enabled() {
    local kname
    kname=$(do_kprobe "$1")
    do_event "kprobes:$kname"
    echo "$kname"
}

# do_uprobe 'p /bin/bash:0x4245c0'
do_uprobe() {
    local k="$1"
    local tmp=${k#*:}
    local kname=${tmp%% *}
    do_run "echo '$k' >> $tracefs/uprobe_events"
    run_atexit "echo -:$kname >> $tracefs/uprobe_events"
    echo "$kname"
}

do_uprobe_enabled() {
    local kname
    kname="$(do_uprobe "$1")"
    do_event "uprobes:$kname"
    echo "$kname"
}

main() {
    local opt_duration=
    local opt_stacktrace=
    while getopts 'd:s' opt; do
        case $opt in
            d)  opt_duration="$OPTARG";;
            s)  opt_stacktrace=1;;
            ?)  err "undefined opt: $opt";
        esac
    done
    shift $((OPTIND - 1))

    do_main "$@"

    if [[ -n "$opt_stacktrace" ]]; then
        echo 1 > $tracefs/options/stacktrace
        run_atexit "echo 0 > $tracefs/options/stacktrace"
    fi

    echo 1 > "$tracefs/tracing_on"
    run_atexit "echo 0 > $tracefs/tracing_on"

    if [ -n "$opt_duration" ]; then
        run_atexit "cat $tracefs/trace"
        sleep "$opt_duration"
    else
        cat "$tracefs/trace_pipe"
    fi
}
